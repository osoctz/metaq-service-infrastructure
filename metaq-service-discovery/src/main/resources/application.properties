spring.application.name=discovery-server
server.port=7001

eureka.instance.hostname=localhost
# 不向注册中心注册自己
eureka.client.register-with-eureka=false
# 不检索服务
eureka.client.fetch-registry=false
# 用于定义服务续约任务的调用间隔实际，默认30秒
eureka.instance.lease-renewal-interval-in-seconds=30
# 用于定义服务失效的时间
eureka.instance.lease-expiration-duration-in-seconds=30
# 注册服务只读清单刷新时间
eureka.client.registry-fetch-interval-seconds=30
# false 关闭保护机制，以确保注册中心可以将不可用的实例正确剔除
eureka.server.enable-self-preservation=false
eureka.client.service-url.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka/


# 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程；
server.undertow.threads.io=8
# 阻塞任务线程池, 当执行类似servlet请求阻塞IO操作, undertow会从这个线程池中取得线程，默认值是IO线程数*8；
server.undertow.threads.worker=64
# 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理；
server.undertow.buffer-size=1024
# 每个区分配的buffer数量 , 所以pool的大小是buffer-size * buffers-per-region
#deprecated
#server.undertow.buffers-per-region=1024
# 是否分配的直接内存(NIO直接分配的堆外内存)
server.undertow.direct-buffers=true

#字体Small Slant
#关闭Banner输出，开启时需要注释此配置，默认为开启
#spring.main.banner-mode=off
